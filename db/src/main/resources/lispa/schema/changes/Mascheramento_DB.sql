BEGIN
UPDATE BCK_MPS_BO_CONTRATTI set CODDIREZIONE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CODDIREZIONE, 'AL32UTF8'),2));
UPDATE BCK_MPS_BO_CONTRATTI set DESDIREZIONE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DESDIREZIONE, 'AL32UTF8'),2));
UPDATE BCK_MPS_BO_CONTRATTI set CODUO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CODUO, 'AL32UTF8'),2));
UPDATE BCK_MPS_BO_CONTRATTI set DESUO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DESUO, 'AL32UTF8'),2));
UPDATE BCK_MPS_BO_CONTRATTI set CODSTRUTTURA = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CODSTRUTTURA, 'AL32UTF8'),2));
UPDATE BCK_MPS_BO_CONTRATTI set DESSTRUTTURA = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DESSTRUTTURA, 'AL32UTF8'),2));
UPDATE BCK_MPS_BO_CONTRATTI set SERVICE_MANAGER = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (SERVICE_MANAGER, 'AL32UTF8'),2));
UPDATE BCK_MPS_BO_CONTRATTI set ID_SM = -1;
UPDATE BCK_MPS_BO_CONTRATTI set PROSSIMO_FIRMATARIO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (PROSSIMO_FIRMATARIO, 'AL32UTF8'),2));
UPDATE BCK_MPS_BO_CONTRATTI set TITOLOCONTRATTO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (TITOLOCONTRATTO, 'AL32UTF8'),2));
COMMIT;
END;


BEGIN
UPDATE DMALM_ANOMALIA_ASSISTENZA set ID_AUTORE_ANOMALIA_ASS = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_ANOMALIA_ASS, 'AL32UTF8'),2));
UPDATE DMALM_ANOMALIA_ASSISTENZA set DS_AUTORE_ANOMALIA_ASS = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_ANOMALIA_ASS, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_ANOMALIA_ASSISTENZA_ODS set ID_AUTORE_ANOMALIA_ASS = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_ANOMALIA_ASS, 'AL32UTF8'),2));
UPDATE DMALM_ANOMALIA_ASSISTENZA_ODS set DS_AUTORE_ANOMALIA_ASS = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_ANOMALIA_ASS, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_ANOMALIA_PRODOTTO set ID_AUTORE_ANOMALIA = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_ANOMALIA, 'AL32UTF8'),2));
UPDATE DMALM_ANOMALIA_PRODOTTO set DS_AUTORE_ANOMALIA = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_ANOMALIA, 'AL32UTF8'),2));
UPDATE DMALM_ANOMALIA_PRODOTTO set TICKET_SIEBEL_ANOMALIA_ASS = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (TICKET_SIEBEL_ANOMALIA_ASS, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_ANOMALIA_PRODOTTO_DUMMY set ID_AUTORE_ANOMALIA = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_ANOMALIA, 'AL32UTF8'),2));
UPDATE DMALM_ANOMALIA_PRODOTTO_DUMMY set DS_AUTORE_ANOMALIA = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_ANOMALIA, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_ANOMALIA_PRODOTTO_ODS set ID_AUTORE_ANOMALIA = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_ANOMALIA, 'AL32UTF8'),2));
UPDATE DMALM_ANOMALIA_PRODOTTO_ODS set DS_AUTORE_ANOMALIA = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_ANOMALIA, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_ASM set NOTE_ASM = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (NOTE_ASM, 'AL32UTF8'),2));
UPDATE DMALM_ASM set P_APP_CD_AMBITO_MAN_ATTUALE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (P_APP_CD_AMBITO_MAN_ATTUALE, 'AL32UTF8'),2));
UPDATE DMALM_ASM set P_APP_CD_AMBITO_MAN_FUTURO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (P_APP_CD_AMBITO_MAN_FUTURO, 'AL32UTF8'),2));
UPDATE DMALM_ASM set P_APP_NOME_AUTH_LAST_UPDATE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (P_APP_NOME_AUTH_LAST_UPDATE, 'AL32UTF8'),2));
UPDATE DMALM_ASM set PERMISSIONS = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (PERMISSIONS, 'AL32UTF8'),2));
UPDATE DMALM_ASM set P_APP_ACC_AUTH_LAST_UPDATE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (P_APP_ACC_AUTH_LAST_UPDATE, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_ATTACHMENT set CD_ATTACHMENT = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CD_ATTACHMENT, 'AL32UTF8'),2));
UPDATE DMALM_ATTACHMENT set NOME_AUTORE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (NOME_AUTORE, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_BUILD set ID_AUTORE_BUILD = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_BUILD, 'AL32UTF8'),2));
UPDATE DMALM_BUILD set DS_AUTORE_BUILD = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_BUILD, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_BUILD_ODS set ID_AUTORE_BUILD = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_BUILD, 'AL32UTF8'),2));
UPDATE DMALM_BUILD_ODS set DS_AUTORE_BUILD = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_BUILD, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_CLASSIFICATORE_DEMAND set ID_AUTORE_CLASSIFICATORE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_CLASSIFICATORE, 'AL32UTF8'),2));
UPDATE DMALM_CLASSIFICATORE_DEMAND set DS_AUTORE_CLASSIFICATORE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_CLASSIFICATORE, 'AL32UTF8'),2));
UPDATE DMALM_CLASSIFICATORE_DEMAND set CF_RIFERIMENTI = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CF_RIFERIMENTI, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_CLASSIFICATORE_DEM_ODS set ID_AUTORE_CLASSIFICATORE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_CLASSIFICATORE, 'AL32UTF8'),2));
UPDATE DMALM_CLASSIFICATORE_DEM_ODS set DS_AUTORE_CLASSIFICATORE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_CLASSIFICATORE, 'AL32UTF8'),2));
UPDATE DMALM_CLASSIFICATORE_DEM_ODS set CF_RIFERIMENTI = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CF_RIFERIMENTI, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_DIFETTO_PRODOTTO set DS_AUTORE_DIFETTO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_DIFETTO, 'AL32UTF8'),2));
UPDATE DMALM_DIFETTO_PRODOTTO set ID_AUTORE_DIFETTO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_DIFETTO, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_DIFETTO_PRODOTTO_DUMMY set DS_AUTORE_DIFETTO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_DIFETTO, 'AL32UTF8'),2));
UPDATE DMALM_DIFETTO_PRODOTTO_DUMMY set ID_AUTORE_DIFETTO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_DIFETTO, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_DIFETTO_PRODOTTO_ODS set USERID_AUTORE_DIFETTO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (USERID_AUTORE_DIFETTO, 'AL32UTF8'),2));
UPDATE DMALM_DIFETTO_PRODOTTO_ODS set NOME_AUTORE_DIFETTO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (NOME_AUTORE_DIFETTO, 'AL32UTF8'),2));
UPDATE DMALM_DIFETTO_PRODOTTO_ODS set DESCRIZIONE_DIFETTO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DESCRIZIONE_DIFETTO, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_DOCUMENTO set DS_AUTORE_DOCUMENTO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_DOCUMENTO, 'AL32UTF8'),2));
UPDATE DMALM_DOCUMENTO set ID_AUTORE_DOCUMENTO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_DOCUMENTO, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_DOCUMENTO_ODS set DS_AUTORE_DOCUMENTO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_DOCUMENTO, 'AL32UTF8'),2));
UPDATE DMALM_DOCUMENTO_ODS set ID_AUTORE_DOCUMENTO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_DOCUMENTO, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_EL_MODULI set RESPONSABILE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (RESPONSABILE, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_EL_PERSONALE set ID_EDMA = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_EDMA, 'AL32UTF8'),2));
UPDATE DMALM_EL_PERSONALE set CD_PERSONALE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CD_PERSONALE, 'AL32UTF8'),2));
UPDATE DMALM_EL_PERSONALE set CD_RESPONSABILE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CD_RESPONSABILE, 'AL32UTF8'),2));
UPDATE DMALM_EL_PERSONALE set INDIRIZZO_EMAIL = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (INDIRIZZO_EMAIL, 'AL32UTF8'),2));
UPDATE DMALM_EL_PERSONALE set NOME = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (NOME, 'AL32UTF8'),2));
UPDATE DMALM_EL_PERSONALE set COGNOME = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (COGNOME, 'AL32UTF8'),2));
UPDATE DMALM_EL_PERSONALE set MATRICOLA = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (MATRICOLA, 'AL32UTF8'),2));
UPDATE DMALM_EL_PERSONALE set CODICE_FISCALE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CODICE_FISCALE, 'AL32UTF8'),2));
UPDATE DMALM_EL_PERSONALE set IDENTIFICATORE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (IDENTIFICATORE, 'AL32UTF8'),2));
UPDATE DMALM_EL_PERSONALE set CD_SUPERIORE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CD_SUPERIORE, 'AL32UTF8'),2));
UPDATE DMALM_EL_PERSONALE set CD_ENTE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CD_ENTE, 'AL32UTF8'),2));
UPDATE DMALM_EL_PERSONALE set CD_VISIBILITA = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CD_VISIBILITA, 'AL32UTF8'),2));
UPDATE DMALM_EL_PERSONALE set ID_GRADO = -1;
UPDATE DMALM_EL_PERSONALE set ID_SEDE = -1;
UPDATE DMALM_EL_PERSONALE set INTERNO = -1;
COMMIT;
END;

BEGIN
UPDATE DMALM_EL_PRODOTTI_ARCH set RESPONSABILE_PRODOTTO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (RESPONSABILE_PRODOTTO, 'AL32UTF8'),2));
UPDATE DMALM_EL_PRODOTTI_ARCH set AMBITO_MANUTENZIONE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (AMBITO_MANUTENZIONE, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_EL_UNITA_ORGANIZZATIVE set CD_RESPONSABILE_AREA = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CD_RESPONSABILE_AREA, 'AL32UTF8'),2));
UPDATE DMALM_EL_UNITA_ORGANIZZATIVE set INDIRIZZO_EMAIL = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (INDIRIZZO_EMAIL, 'AL32UTF8'),2));
UPDATE DMALM_EL_UNITA_ORGANIZZATIVE set CD_ENTE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CD_ENTE, 'AL32UTF8'),2));
UPDATE DMALM_EL_UNITA_ORGANIZZATIVE set INTERNO = -1;
UPDATE DMALM_EL_UNITA_ORGANIZZATIVE set ID_TIPOLOGIA_UFFICIO = -1;
UPDATE DMALM_EL_UNITA_ORGANIZZATIVE set ID_GRADO_UFFICIO = -1;
UPDATE DMALM_EL_UNITA_ORGANIZZATIVE set ID_SEDE = -1;
COMMIT;
END;

BEGIN
UPDATE DMALM_FASE set DS_AUTORE_FASE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_FASE, 'AL32UTF8'),2));
UPDATE DMALM_FASE set ID_AUTORE_FASE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_FASE, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_FASE_ODS set DS_AUTORE_FASE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_FASE, 'AL32UTF8'),2));
UPDATE DMALM_FASE_ODS set ID_AUTORE_FASE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_FASE, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_MANUTENZIONE set DS_AUTORE_MANUTENZIONE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_MANUTENZIONE, 'AL32UTF8'),2));
UPDATE DMALM_MANUTENZIONE set ID_AUTORE_MANUTENZIONE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_MANUTENZIONE, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_MANUTENZIONE_ODS set DS_AUTORE_MANUTENZIONE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_MANUTENZIONE, 'AL32UTF8'),2));
UPDATE DMALM_MANUTENZIONE_ODS set ID_AUTORE_MANUTENZIONE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_MANUTENZIONE, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_MISURA set RESPONSABILE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (RESPONSABILE, 'AL32UTF8'),2));
UPDATE DMALM_MISURA set SCOPO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (SCOPO, 'AL32UTF8'),2));
UPDATE DMALM_MISURA set UTENTE_MISURATORE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (UTENTE_MISURATORE, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_PEI set DS_AUTORE_PEI = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_PEI, 'AL32UTF8'),2));
UPDATE DMALM_PEI set ID_AUTORE_PEI = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_PEI, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_PEI_ODS set DS_AUTORE_PEI = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_PEI, 'AL32UTF8'),2));
UPDATE DMALM_PEI_ODS set ID_AUTORE_PEI = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_PEI, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_PERSONALE set CD_PERSONALE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CD_PERSONALE, 'AL32UTF8'),2));
UPDATE DMALM_PERSONALE set INDIRIZZO_EMAIL = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (INDIRIZZO_EMAIL, 'AL32UTF8'),2));
UPDATE DMALM_PERSONALE set NOME = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (NOME, 'AL32UTF8'),2));
UPDATE DMALM_PERSONALE set COGNOME = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (COGNOME, 'AL32UTF8'),2));
UPDATE DMALM_PERSONALE set MATRICOLA = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (MATRICOLA, 'AL32UTF8'),2));
UPDATE DMALM_PERSONALE set CODICE_FISCALE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CODICE_FISCALE, 'AL32UTF8'),2));
UPDATE DMALM_PERSONALE set IDENTIFICATORE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (IDENTIFICATORE, 'AL32UTF8'),2));
UPDATE DMALM_PERSONALE set CD_ENTE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CD_ENTE, 'AL32UTF8'),2));
UPDATE DMALM_PERSONALE set ID_EDMA = -1;
UPDATE DMALM_PERSONALE set ID_GRADO = -1;
UPDATE DMALM_PERSONALE set ID_SEDE = -1;
UPDATE DMALM_PERSONALE set INTERNO = -1;
COMMIT;
END;

BEGIN
UPDATE DMALM_PRODOTTO set AMBITO_MANUTENZIONE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (AMBITO_MANUTENZIONE, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_PROGETTO_DEMAND set ID_AUTORE_PROGETTO_DEMAND = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_PROGETTO_DEMAND, 'AL32UTF8'),2));
UPDATE DMALM_PROGETTO_DEMAND set DS_AUTORE_PROGETTO_DEMAND = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_PROGETTO_DEMAND, 'AL32UTF8'),2));
UPDATE DMALM_PROGETTO_DEMAND set CF_OWNER_DEMAND = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CF_OWNER_DEMAND, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_PROGETTO_DEMAND_ODS set ID_AUTORE_PROGETTO_DEMAND = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_PROGETTO_DEMAND, 'AL32UTF8'),2));
UPDATE DMALM_PROGETTO_DEMAND_ODS set DS_AUTORE_PROGETTO_DEMAND = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_PROGETTO_DEMAND, 'AL32UTF8'),2));
UPDATE DMALM_PROGETTO_DEMAND_ODS set CF_OWNER_DEMAND = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CF_OWNER_DEMAND, 'AL32UTF8'),2));
UPDATE DMALM_PROGETTO_DEMAND_ODS set CF_REFERENTE_SVILUPPO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CF_REFERENTE_SVILUPPO, 'AL32UTF8'),2));
UPDATE DMALM_PROGETTO_DEMAND_ODS set CF_REFERENTE_ESERCIZIO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CF_REFERENTE_ESERCIZIO, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_PROGETTO_ESE set ID_AUTORE_PROGETTO_ESE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_PROGETTO_ESE, 'AL32UTF8'),2));
UPDATE DMALM_PROGETTO_ESE set DS_AUTORE_PROGETTO_ESE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_PROGETTO_ESE, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_PROGETTO_ESE_ODS set ID_AUTORE_PROGETTO_ESE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_PROGETTO_ESE, 'AL32UTF8'),2));
UPDATE DMALM_PROGETTO_ESE_ODS set DS_AUTORE_PROGETTO_ESE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_PROGETTO_ESE, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_PROGETTO_SFERA set NOTE_PRJ = rawtohex(DBMS_CRYPTO.Hash (utl_raw.cast_to_raw(SUBSTR(NOTE_PRJ, 1, 2000)), 2));
UPDATE DMALM_PROGETTO_SFERA set P_PRJ_AUDIT_MONITORE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (P_PRJ_AUDIT_MONITORE, 'AL32UTF8'),2));
UPDATE DMALM_PROGETTO_SFERA set P_PRJ_FORNITORE_MPP = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (P_PRJ_FORNITORE_MPP, 'AL32UTF8'),2));
UPDATE DMALM_PROGETTO_SFERA set P_PRJ_FORNITORE_SVILUPPO_MEV = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (P_PRJ_FORNITORE_SVILUPPO_MEV, 'AL32UTF8'),2));
UPDATE DMALM_PROGETTO_SFERA set P_PRJ_CD_RDI = -1;
COMMIT;
END;

BEGIN
UPDATE DMALM_PROGETTO_SVILUPPO_DEM set ID_AUTORE_PROG_SVIL_D = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_PROG_SVIL_D, 'AL32UTF8'),2));
UPDATE DMALM_PROGETTO_SVILUPPO_DEM set DS_AUTORE_PROG_SVIL_D = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_PROG_SVIL_D, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_PROGETTO_SVILUPPO_D_ODS set ID_AUTORE_PROG_SVIL_D = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_PROG_SVIL_D, 'AL32UTF8'),2));
UPDATE DMALM_PROGETTO_SVILUPPO_D_ODS set DS_AUTORE_PROG_SVIL_D = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_PROG_SVIL_D, 'AL32UTF8'),2));
UPDATE DMALM_PROGETTO_SVILUPPO_D_ODS set ASSIGNEE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ASSIGNEE, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_PROGETTO_SVILUPPO_SVIL set ID_AUTORE_PROG_SVIL_S = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_PROG_SVIL_S, 'AL32UTF8'),2));
UPDATE DMALM_PROGETTO_SVILUPPO_SVIL set DS_AUTORE_PROG_SVIL_S = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_PROG_SVIL_S, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_PROGETTO_SVILUPPO_S_ODS set ID_AUTORE_PROG_SVIL_S = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_PROG_SVIL_S, 'AL32UTF8'),2));
UPDATE DMALM_PROGETTO_SVILUPPO_S_ODS set DS_AUTORE_PROG_SVIL_S = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_PROG_SVIL_S, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_PROGRAMMA set ID_AUTORE_PROGRAMMA = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_PROGRAMMA, 'AL32UTF8'),2));
UPDATE DMALM_PROGRAMMA set DS_AUTORE_PROGRAMMA = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_PROGRAMMA, 'AL32UTF8'),2));
UPDATE DMALM_PROGRAMMA set ASSIGNEE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ASSIGNEE, 'AL32UTF8'),2));
UPDATE DMALM_PROGRAMMA set CF_SERVICE_MANAGER = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CF_SERVICE_MANAGER, 'AL32UTF8'),2));
UPDATE DMALM_PROGRAMMA set CF_REFERENTE_REGIONALE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CF_REFERENTE_REGIONALE, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_PROGRAMMA_ODS set ID_AUTORE_PROGRAMMA = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_PROGRAMMA, 'AL32UTF8'),2));
UPDATE DMALM_PROGRAMMA_ODS set DS_AUTORE_PROGRAMMA = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_PROGRAMMA, 'AL32UTF8'),2));
UPDATE DMALM_PROGRAMMA_ODS set ASSIGNEE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ASSIGNEE, 'AL32UTF8'),2));
UPDATE DMALM_PROGRAMMA_ODS set CF_SERVICE_MANAGER = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CF_SERVICE_MANAGER, 'AL32UTF8'),2));
UPDATE DMALM_PROGRAMMA_ODS set CF_REFERENTE_REGIONALE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CF_REFERENTE_REGIONALE, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_PROJECT set SERVICE_MANAGERS = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (SERVICE_MANAGERS, 'AL32UTF8'),2));
UPDATE DMALM_PROJECT set FK_URI_LEAD = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (FK_URI_LEAD, 'AL32UTF8'),2));
UPDATE DMALM_PROJECT set FK_LEAD = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (FK_URI_LEAD, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_PROJECT_BKP set SERVICE_MANAGERS = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (SERVICE_MANAGERS, 'AL32UTF8'),2));
UPDATE DMALM_PROJECT_BKP set FK_URI_LEAD = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (FK_URI_LEAD, 'AL32UTF8'),2));
UPDATE DMALM_PROJECT_BKP set FK_LEAD = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (FK_LEAD, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_RELEASE_DI_PROGETTO set ID_AUTORE_RELEASEDIPROG = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_RELEASEDIPROG, 'AL32UTF8'),2));
UPDATE DMALM_RELEASE_DI_PROGETTO set DS_AUTORE_RELEASEDIPROG = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_RELEASEDIPROG, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_RELEASE_DI_PROGETTO_ODS set ID_AUTORE_RELEASEDIPROG = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_RELEASEDIPROG, 'AL32UTF8'),2));
UPDATE DMALM_RELEASE_DI_PROGETTO_ODS set DS_AUTORE_RELEASEDIPROG = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_RELEASEDIPROG, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_RELEASE_IT set ID_AUTORE_RELEASE_IT = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_RELEASE_IT, 'AL32UTF8'),2));
UPDATE DMALM_RELEASE_IT set DS_AUTORE_RELEASE_IT = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_RELEASE_IT, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_RELEASE_IT_ODS set ID_AUTORE_RELEASE_IT = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_RELEASE_IT, 'AL32UTF8'),2));
UPDATE DMALM_RELEASE_IT_ODS set DS_AUTORE_RELEASE_IT = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_RELEASE_IT, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_RELEASE_SERVIZI set ID_AUTORE_REL_SERVIZI = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_REL_SERVIZI, 'AL32UTF8'),2));
UPDATE DMALM_RELEASE_SERVIZI set DS_AUTORE_REL_SERVIZI = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_REL_SERVIZI, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_RELEASE_SERVIZI_ODS set ID_AUTORE_REL_SERVIZI = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_REL_SERVIZI, 'AL32UTF8'),2));
UPDATE DMALM_RELEASE_SERVIZI_ODS set DS_AUTORE_REL_SERVIZI = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_REL_SERVIZI, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_RICHIESTA_GESTIONE set ID_AUTORE_RICHIESTA_GEST = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_RICHIESTA_GEST, 'AL32UTF8'),2));
UPDATE DMALM_RICHIESTA_GESTIONE set DS_AUTORE_RICHIESTA_GEST = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_RICHIESTA_GEST, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_RICHIESTA_GESTIONE_ODS set ID_AUTORE_RICHIESTA_GEST = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_RICHIESTA_GEST, 'AL32UTF8'),2));
UPDATE DMALM_RICHIESTA_GESTIONE_ODS set DS_AUTORE_RICHIESTA_GEST = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_RICHIESTA_GEST, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_RICHIESTA_MANUTENZIONE set ID_AUTORE_RICH_MANUTENZIONE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_RICH_MANUTENZIONE, 'AL32UTF8'),2));
UPDATE DMALM_RICHIESTA_MANUTENZIONE set DS_AUTORE_RICH_MANUTENZIONE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_RICH_MANUTENZIONE, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_RICH_MANUTENZIONE_ODS set ID_AUTORE_RICH_MANUTENZIONE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_RICH_MANUTENZIONE, 'AL32UTF8'),2));
UPDATE DMALM_RICH_MANUTENZIONE_ODS set DS_AUTORE_RICH_MANUTENZIONE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_RICH_MANUTENZIONE, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_SIRE_CURRENT_PROJECT set FK_URI_LEAD = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (FK_URI_LEAD, 'AL32UTF8'),2));
UPDATE DMALM_SIRE_CURRENT_PROJECT set FK_LEAD = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (FK_LEAD, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_SIRE_HISTORY_ATTACHMENT set FK_AUTHOR = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (FK_AUTHOR, 'AL32UTF8'),2));
UPDATE DMALM_SIRE_HISTORY_ATTACHMENT set FK_URI_AUTHOR = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (FK_URI_AUTHOR, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_SIRE_HISTORY_PROJECT set FK_URI_LEAD = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (FK_URI_LEAD, 'AL32UTF8'),2));
UPDATE DMALM_SIRE_HISTORY_PROJECT set FK_LEAD = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (FK_LEAD, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_SIRE_HISTORY_REVISION set C_AUTHOR = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (C_AUTHOR, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_SIRE_HISTORY_USER set C_PK = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (C_PK, 'AL32UTF8'),2));
UPDATE DMALM_SIRE_HISTORY_USER set C_NAME = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (C_NAME, 'AL32UTF8'),2));
UPDATE DMALM_SIRE_HISTORY_USER set C_ID = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (C_ID, 'AL32UTF8'),2));
UPDATE DMALM_SIRE_HISTORY_USER set C_EMAIL = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (C_EMAIL, 'AL32UTF8'),2));
UPDATE DMALM_SIRE_HISTORY_USER set C_URI = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (C_URI, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_SIRE_HISTORY_WORKITEM set FK_AUTHOR = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (FK_AUTHOR, 'AL32UTF8'),2));
UPDATE DMALM_SIRE_HISTORY_WORKITEM set FK_URI_AUTHOR = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (FK_URI_AUTHOR, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_SIRE_HISTORY_WORKUSERASS set FK_USER = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (FK_USER, 'AL32UTF8'),2));
UPDATE DMALM_SIRE_HISTORY_WORKUSERASS set FK_URI_USER = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (FK_URI_USER, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_SISS_CURRENT_PROJECT set FK_URI_LEAD = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (FK_URI_LEAD, 'AL32UTF8'),2));
UPDATE DMALM_SISS_CURRENT_PROJECT set FK_LEAD = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (FK_LEAD, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_SISS_HISTORY_ATTACHMENT set FK_AUTHOR = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (FK_AUTHOR, 'AL32UTF8'),2));
UPDATE DMALM_SISS_HISTORY_ATTACHMENT set FK_URI_AUTHOR = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (FK_URI_AUTHOR, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_SISS_HISTORY_PROJECT set FK_URI_LEAD = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (FK_URI_LEAD, 'AL32UTF8'),2));
UPDATE DMALM_SISS_HISTORY_PROJECT set FK_LEAD = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (FK_LEAD, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_SISS_HISTORY_REVISION set C_AUTHOR = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (C_AUTHOR, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_SISS_HISTORY_USER set C_PK = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (C_PK, 'AL32UTF8'),2));
UPDATE DMALM_SISS_HISTORY_USER set C_NAME = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (C_NAME, 'AL32UTF8'),2));
UPDATE DMALM_SISS_HISTORY_USER set C_ID = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (C_ID, 'AL32UTF8'),2));
UPDATE DMALM_SISS_HISTORY_USER set C_EMAIL = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (C_EMAIL, 'AL32UTF8'),2));
UPDATE DMALM_SISS_HISTORY_USER set C_URI = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (C_URI, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_SISS_HISTORY_WORKITEM set FK_AUTHOR = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (FK_AUTHOR, 'AL32UTF8'),2));
UPDATE DMALM_SISS_HISTORY_WORKITEM set FK_URI_AUTHOR = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (FK_URI_AUTHOR, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_SISS_HISTORY_WORKUSERASS set FK_USER = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (FK_USER, 'AL32UTF8'),2));
UPDATE DMALM_SISS_HISTORY_WORKUSERASS set FK_URI_USER = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (FK_URI_USER, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_SOTTOPROGRAMMA set ID_AUTORE_SOTTOPROGRAMMA = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_SOTTOPROGRAMMA, 'AL32UTF8'),2));
UPDATE DMALM_SOTTOPROGRAMMA set DS_AUTORE_SOTTOPROGRAMMA = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_SOTTOPROGRAMMA, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_SOTTOPROGRAMMA_ODS set ID_AUTORE_SOTTOPROGRAMMA = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_SOTTOPROGRAMMA, 'AL32UTF8'),2));
UPDATE DMALM_SOTTOPROGRAMMA_ODS set DS_AUTORE_SOTTOPROGRAMMA = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_SOTTOPROGRAMMA, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_STG_EL_MODULI set RESPONSABILE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (RESPONSABILE, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_STG_EL_PERSONALE set ID_EDMA = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_EDMA, 'AL32UTF8'),2));
UPDATE DMALM_STG_EL_PERSONALE set CD_PERSONALE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CD_PERSONALE, 'AL32UTF8'),2));
UPDATE DMALM_STG_EL_PERSONALE set CD_RESPONSABILE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CD_RESPONSABILE, 'AL32UTF8'),2));
UPDATE DMALM_STG_EL_PERSONALE set INDIRIZZO_EMAIL = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (INDIRIZZO_EMAIL, 'AL32UTF8'),2));
UPDATE DMALM_STG_EL_PERSONALE set NOME = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (NOME, 'AL32UTF8'),2));
UPDATE DMALM_STG_EL_PERSONALE set COGNOME = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (COGNOME, 'AL32UTF8'),2));
UPDATE DMALM_STG_EL_PERSONALE set MATRICOLA = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (MATRICOLA, 'AL32UTF8'),2));
UPDATE DMALM_STG_EL_PERSONALE set CODICE_FISCALE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CODICE_FISCALE, 'AL32UTF8'),2));
UPDATE DMALM_STG_EL_PERSONALE set IDENTIFICATORE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (IDENTIFICATORE, 'AL32UTF8'),2));
UPDATE DMALM_STG_EL_PERSONALE set ID_GRADO = -1;
UPDATE DMALM_STG_EL_PERSONALE set ID_SEDE = -1;
UPDATE DMALM_STG_EL_PERSONALE set INTERNO = -1;
COMMIT;
END;

BEGIN
UPDATE DMALM_STG_EL_PRODOTTI_ARCH set RESPONSABILE_PRODOTTO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (RESPONSABILE_PRODOTTO, 'AL32UTF8'),2));
UPDATE DMALM_STG_EL_PRODOTTI_ARCH set AMBITO_MANUTENZIONE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (AMBITO_MANUTENZIONE, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_STG_EL_UNITA_ORGANIZZ set NOTE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (NOTE, 'AL32UTF8'),2));
UPDATE DMALM_STG_EL_UNITA_ORGANIZZ set CD_RESPONSABILE_AREA = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CD_RESPONSABILE_AREA, 'AL32UTF8'),2));
UPDATE DMALM_STG_EL_UNITA_ORGANIZZ set INDIRIZZO_EMAIL = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (INDIRIZZO_EMAIL, 'AL32UTF8'),2));
UPDATE DMALM_STG_EL_UNITA_ORGANIZZ set CD_ENTE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CD_ENTE, 'AL32UTF8'),2));
UPDATE DMALM_STG_EL_UNITA_ORGANIZZ set INTERNO = -1;
UPDATE DMALM_STG_EL_UNITA_ORGANIZZ set ID_TIPOLOGIA_UFFICIO = -1;
UPDATE DMALM_STG_EL_UNITA_ORGANIZZ set ID_GRADO_UFFICIO = -1;
UPDATE DMALM_STG_EL_UNITA_ORGANIZZ set ID_SEDE = -1;
COMMIT;
END;

BEGIN
UPDATE DMALM_STG_MISURA set NOTE_ASM = rawtohex(DBMS_CRYPTO.Hash (utl_raw.cast_to_raw(SUBSTR(NOTE_ASM, 1, 2000)), 2));
UPDATE DMALM_STG_MISURA set NOTE_PRJ = rawtohex(DBMS_CRYPTO.Hash (utl_raw.cast_to_raw(SUBSTR(NOTE_PRJ, 1, 2000)), 2));
UPDATE DMALM_STG_MISURA set NOTE_MSR = rawtohex(DBMS_CRYPTO.Hash (utl_raw.cast_to_raw(SUBSTR(NOTE_MSR, 1, 2000)), 2));
UPDATE DMALM_STG_MISURA set RESPONSABILE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (RESPONSABILE, 'AL32UTF8'),2));
UPDATE DMALM_STG_MISURA set UTENTE_MISURATORE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (UTENTE_MISURATORE, 'AL32UTF8'),2));
UPDATE DMALM_STG_MISURA set PERMISSIONS = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (PERMISSIONS, 'AL32UTF8'),2));
UPDATE DMALM_STG_MISURA set P_APP_NOME_AUTH_LAST_UPDATE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (P_APP_NOME_AUTH_LAST_UPDATE, 'AL32UTF8'),2));
UPDATE DMALM_STG_MISURA set P_APP_CD_AMBITO_MAN_ATTUALE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (P_APP_CD_AMBITO_MAN_ATTUALE, 'AL32UTF8'),2));
UPDATE DMALM_STG_MISURA set P_APP_CD_AMBITO_MAN_FUTURO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (P_APP_CD_AMBITO_MAN_FUTURO, 'AL32UTF8'),2));
UPDATE DMALM_STG_MISURA set P_PRJ_FORNITORE_SVILUPPO_MEV = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (P_PRJ_FORNITORE_SVILUPPO_MEV, 'AL32UTF8'),2));
UPDATE DMALM_STG_MISURA set P_PRJ_FORNITORE_MPP = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (P_PRJ_FORNITORE_MPP, 'AL32UTF8'),2));
UPDATE DMALM_STG_MISURA set P_PRJ_AUDIT_MONITORE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (P_PRJ_AUDIT_MONITORE, 'AL32UTF8'),2));
UPDATE DMALM_STG_MISURA set P_APP_ACC_AUTH_LAST_UPDATE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (P_APP_ACC_AUTH_LAST_UPDATE, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_STG_MODULI set EDMA_RESP_MODULO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (EDMA_RESP_MODULO, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_STG_MPS_CONTRATTI set CODDIREZIONE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CODDIREZIONE, 'AL32UTF8'),2));
UPDATE DMALM_STG_MPS_CONTRATTI set DESDIREZIONE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DESDIREZIONE, 'AL32UTF8'),2));
UPDATE DMALM_STG_MPS_CONTRATTI set CODUO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CODUO, 'AL32UTF8'),2));
UPDATE DMALM_STG_MPS_CONTRATTI set DESUO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DESUO, 'AL32UTF8'),2));
UPDATE DMALM_STG_MPS_CONTRATTI set CODSTRUTTURA = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CODSTRUTTURA, 'AL32UTF8'),2));
UPDATE DMALM_STG_MPS_CONTRATTI set DESSTRUTTURA = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DESSTRUTTURA, 'AL32UTF8'),2));
UPDATE DMALM_STG_MPS_CONTRATTI set SERVICE_MANAGER = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (SERVICE_MANAGER, 'AL32UTF8'),2));
UPDATE DMALM_STG_MPS_CONTRATTI set PROSSIMO_FIRMATARIO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (PROSSIMO_FIRMATARIO, 'AL32UTF8'),2));
UPDATE DMALM_STG_MPS_CONTRATTI set TITOLOCONTRATTO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (TITOLOCONTRATTO, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_STG_MPS_FIRMAT_VERBALE set FIRMATARIO_VERBALE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (FIRMATARIO_VERBALE, 'AL32UTF8'),2));
UPDATE DMALM_STG_MPS_FIRMAT_VERBALE set ENTE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ENTE, 'AL32UTF8'),2));
UPDATE DMALM_STG_MPS_FIRMAT_VERBALE set IDUTENTE = -1;
UPDATE DMALM_STG_MPS_FIRMAT_VERBALE set IDENTE = -1;
COMMIT;
END;

BEGIN
UPDATE DMALM_STG_MPS_RESPON_CONTRATTO set RESPONSABILE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (RESPONSABILE, 'AL32UTF8'),2));
UPDATE DMALM_STG_MPS_RESPON_CONTRATTO set ENTE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ENTE, 'AL32UTF8'),2));
UPDATE DMALM_STG_MPS_RESPON_CONTRATTO set IDUTENTE = -1;
UPDATE DMALM_STG_MPS_RESPON_CONTRATTO set IDENTE = -1;
COMMIT;
END;

BEGIN
UPDATE DMALM_STG_MPS_RESPON_OFFERTA set AM_NOME = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (AM_NOME, 'AL32UTF8'),2));
UPDATE DMALM_STG_MPS_RESPON_OFFERTA set SAM_NOME = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (SAM_NOME, 'AL32UTF8'),2));
UPDATE DMALM_STG_MPS_RESPON_OFFERTA set VDG_NOME = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (VDG_NOME, 'AL32UTF8'),2));
UPDATE DMALM_STG_MPS_RESPON_OFFERTA set DG_NOME = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DG_NOME, 'AL32UTF8'),2));
UPDATE DMALM_STG_MPS_RESPON_OFFERTA set CD_NOME = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CD_NOME, 'AL32UTF8'),2));
UPDATE DMALM_STG_MPS_RESPON_OFFERTA set CONTROLLER = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CONTROLLER, 'AL32UTF8'),2));
UPDATE DMALM_STG_MPS_RESPON_OFFERTA set MOTIVAZIONE_RIGETTO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (MOTIVAZIONE_RIGETTO, 'AL32UTF8'),2));
UPDATE DMALM_STG_MPS_RESPON_OFFERTA set PROSSIMO_FIRMATARIO_RAZIONALE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (PROSSIMO_FIRMATARIO_RAZIONALE, 'AL32UTF8'),2));
UPDATE DMALM_STG_MPS_RESPON_OFFERTA set NOTA_RAZIONALE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (NOTA_RAZIONALE, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_STG_PERSONALE set CODICE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CODICE, 'AL32UTF8'),2));
UPDATE DMALM_STG_PERSONALE set NOTE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (NOTE, 'AL32UTF8'),2));
UPDATE DMALM_STG_PERSONALE set INTERNO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (INTERNO, 'AL32UTF8'),2));
UPDATE DMALM_STG_PERSONALE set COD_RESPONSABILE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (COD_RESPONSABILE, 'AL32UTF8'),2));
UPDATE DMALM_STG_PERSONALE set INDIRIZZO_EMAIL = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (INDIRIZZO_EMAIL, 'AL32UTF8'),2));
UPDATE DMALM_STG_PERSONALE set NOME = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (NOME, 'AL32UTF8'),2));
UPDATE DMALM_STG_PERSONALE set COGNOME = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (COGNOME, 'AL32UTF8'),2));
UPDATE DMALM_STG_PERSONALE set MATRICOLA = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (MATRICOLA, 'AL32UTF8'),2));
UPDATE DMALM_STG_PERSONALE set CODICE_FISCALE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CODICE_FISCALE, 'AL32UTF8'),2));
UPDATE DMALM_STG_PERSONALE set IDENTFICATORE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (IDENTFICATORE, 'AL32UTF8'),2));
UPDATE DMALM_STG_PERSONALE set ID_GRADO_UFFICIO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_GRADO_UFFICIO, 'AL32UTF8'),2));
UPDATE DMALM_STG_PERSONALE set ID_SEDE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_SEDE, 'AL32UTF8'),2));
UPDATE DMALM_STG_PERSONALE set COD_ENTE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (COD_ENTE, 'AL32UTF8'),2));
UPDATE DMALM_STG_PERSONALE set TIPOPERSONA = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (TIPOPERSONA, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_STG_PROD_ARCHITETTURE set EDMA_RESP_PRODOTTO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (EDMA_RESP_PRODOTTO, 'AL32UTF8'),2));
UPDATE DMALM_STG_PROD_ARCHITETTURE set CLASF_AMBITO_MANUTENZIONE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CLASF_AMBITO_MANUTENZIONE, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_STG_SOTTOSISTEMI set EDMA_RESPO_SOTTOSISTEMA = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (EDMA_RESPO_SOTTOSISTEMA, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_STG_UNITA_ORGANIZZATIVE set NOTE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (NOTE, 'AL32UTF8'),2));
UPDATE DMALM_STG_UNITA_ORGANIZZATIVE set INTERNO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (INTERNO, 'AL32UTF8'),2));
UPDATE DMALM_STG_UNITA_ORGANIZZATIVE set COD_RESPONSABILE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (COD_RESPONSABILE, 'AL32UTF8'),2));
UPDATE DMALM_STG_UNITA_ORGANIZZATIVE set INDIRIZZO_EMAIL = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (INDIRIZZO_EMAIL, 'AL32UTF8'),2));
UPDATE DMALM_STG_UNITA_ORGANIZZATIVE set ID_TIPOLOGIA_UFFICIO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_TIPOLOGIA_UFFICIO, 'AL32UTF8'),2));
UPDATE DMALM_STG_UNITA_ORGANIZZATIVE set ID_GRADO_UFFICIO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_GRADO_UFFICIO, 'AL32UTF8'),2));
UPDATE DMALM_STG_UNITA_ORGANIZZATIVE set ID_SEDE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_SEDE, 'AL32UTF8'),2));
UPDATE DMALM_STG_UNITA_ORGANIZZATIVE set COD_ENTE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (COD_ENTE, 'AL32UTF8'),2));
UPDATE DMALM_STG_UNITA_ORGANIZZATIVE set TIPO_PERSONA = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (TIPO_PERSONA, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_TASK set ID_AUTORE_TASK = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_TASK, 'AL32UTF8'),2));
UPDATE DMALM_TASK set DS_AUTORE_TASK = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_TASK, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_TASK_IT set ID_AUTORE_TASK_IT = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_TASK_IT, 'AL32UTF8'),2));
UPDATE DMALM_TASK_IT set DS_AUTORE_TASK_IT = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_TASK_IT, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_TASK_IT_ODS set ID_AUTORE_TASK_IT = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_TASK_IT, 'AL32UTF8'),2));
UPDATE DMALM_TASK_IT_ODS set DS_AUTORE_TASK_IT = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_TASK_IT, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_TASK_ODS set ID_AUTORE_TASK = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_TASK, 'AL32UTF8'),2));
UPDATE DMALM_TASK_ODS set DS_AUTORE_TASK = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_TASK, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_TESTCASE set ID_AUTORE_TESTCASE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_TESTCASE, 'AL32UTF8'),2));
UPDATE DMALM_TESTCASE set DS_AUTORE_TESTCASE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_TESTCASE, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_TESTCASE_ODS set ID_AUTORE_TESTCASE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_AUTORE_TESTCASE, 'AL32UTF8'),2));
UPDATE DMALM_TESTCASE_ODS set DS_AUTORE_TESTCASE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DS_AUTORE_TESTCASE, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_UNITA_ORGANIZZATIVA set CD_RESPONSABILE_AREA = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CD_RESPONSABILE_AREA, 'AL32UTF8'),2));
UPDATE DMALM_UNITA_ORGANIZZATIVA set DN_RESPONSABILE_AREA = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DN_RESPONSABILE_AREA, 'AL32UTF8'),2));
UPDATE DMALM_UNITA_ORGANIZZATIVA set CD_ENTE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CD_ENTE, 'AL32UTF8'),2));
UPDATE DMALM_UNITA_ORGANIZZATIVA set INDIRIZZO_EMAIL = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (INDIRIZZO_EMAIL, 'AL32UTF8'),2));
UPDATE DMALM_UNITA_ORGANIZZATIVA set ID_TIPOLOGIA_UFFICIO = -1;
UPDATE DMALM_UNITA_ORGANIZZATIVA set ID_GRADO_UFFICIO = -1;
UPDATE DMALM_UNITA_ORGANIZZATIVA set ID_SEDE = -1;
UPDATE DMALM_UNITA_ORGANIZZATIVA set INTERNO = -1;
COMMIT;
END;

BEGIN
UPDATE DMALM_USER set ID_USER = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_USER, 'AL32UTF8'),2));
UPDATE DMALM_USER set INITIALS_USER = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (INITIALS_USER, 'AL32UTF8'),2));
UPDATE DMALM_USER set USER_NAME = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (USER_NAME, 'AL32UTF8'),2));
UPDATE DMALM_USER set USER_EMAIL = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (USER_EMAIL, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_USER_ROLES set UTENTE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (UTENTE, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_USER_ROLES_SGR set USERID = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (USERID, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_WORKITEM_ASSIGNEES set ID_USER = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ID_USER, 'AL32UTF8'),2));
COMMIT;
END;


BEGIN
UPDATE MPS_BO_CONTRATTI set CODDIREZIONE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CODDIREZIONE, 'AL32UTF8'),2));
UPDATE MPS_BO_CONTRATTI set DESDIREZIONE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DESDIREZIONE, 'AL32UTF8'),2));
UPDATE MPS_BO_CONTRATTI set CODUO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CODUO, 'AL32UTF8'),2));
UPDATE MPS_BO_CONTRATTI set DESUO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DESUO, 'AL32UTF8'),2));
UPDATE MPS_BO_CONTRATTI set CODSTRUTTURA = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CODSTRUTTURA, 'AL32UTF8'),2));
UPDATE MPS_BO_CONTRATTI set DESSTRUTTURA = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DESSTRUTTURA, 'AL32UTF8'),2));
UPDATE MPS_BO_CONTRATTI set PROSSIMO_FIRMATARIO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (PROSSIMO_FIRMATARIO, 'AL32UTF8'),2));
UPDATE MPS_BO_CONTRATTI set SERVICE_MANAGER = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (SERVICE_MANAGER, 'AL32UTF8'),2));
UPDATE MPS_BO_CONTRATTI set TITOLOCONTRATTO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (TITOLOCONTRATTO, 'AL32UTF8'),2));
UPDATE MPS_BO_CONTRATTI set ID_SM = -1;
COMMIT;
END;

BEGIN
UPDATE MPS_BO_FIRMATARI_VERBALE set FIRMATARIO_VERBALE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (FIRMATARIO_VERBALE, 'AL32UTF8'),2));
UPDATE MPS_BO_FIRMATARI_VERBALE set ENTE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ENTE, 'AL32UTF8'),2));
UPDATE MPS_BO_FIRMATARI_VERBALE set IDUTENTE = -1;
UPDATE MPS_BO_FIRMATARI_VERBALE set IDENTE = -1;
COMMIT;
END;

BEGIN
UPDATE MPS_BO_RESPONSABILI_CONTRATTO set RESPONSABILE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (RESPONSABILE, 'AL32UTF8'),2));
UPDATE MPS_BO_RESPONSABILI_CONTRATTO set ENTE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (ENTE, 'AL32UTF8'),2));
UPDATE MPS_BO_RESPONSABILI_CONTRATTO set IDENTE = -1;
UPDATE MPS_BO_RESPONSABILI_CONTRATTO set IDUTENTE = -1;
COMMIT;
END;

BEGIN
UPDATE MPS_BO_RESPONSABILI_OFFERTA set AM_NOME = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (AM_NOME, 'AL32UTF8'),2));
UPDATE MPS_BO_RESPONSABILI_OFFERTA set SAM_NOME = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (SAM_NOME, 'AL32UTF8'),2));
UPDATE MPS_BO_RESPONSABILI_OFFERTA set VDG_NOME = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (VDG_NOME, 'AL32UTF8'),2));
UPDATE MPS_BO_RESPONSABILI_OFFERTA set DG_NOME = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DG_NOME, 'AL32UTF8'),2));
UPDATE MPS_BO_RESPONSABILI_OFFERTA set CD_NOME = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CD_NOME, 'AL32UTF8'),2));
UPDATE MPS_BO_RESPONSABILI_OFFERTA set CONTROLLER = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CONTROLLER, 'AL32UTF8'),2));
UPDATE MPS_BO_RESPONSABILI_OFFERTA set MOTIVAZIONE_RIGETTO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (MOTIVAZIONE_RIGETTO, 'AL32UTF8'),2));
UPDATE MPS_BO_RESPONSABILI_OFFERTA set PROSSIMO_FIRMATARIO_RAZIONALE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (PROSSIMO_FIRMATARIO_RAZIONALE, 'AL32UTF8'),2));
UPDATE MPS_BO_RESPONSABILI_OFFERTA set NOTA_RAZIONALE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (NOTA_RAZIONALE, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE DMALM_STG_MPS_ATTIVITA set INSERITO_DA = -1;
UPDATE DMALM_STG_MPS_ATTIVITA set MODIFICATO_DA = -1;
COMMIT;
END;

BEGIN
UPDATE MPS_BO_ATTIVITA set INSERITO_DA = -1;
UPDATE MPS_BO_ATTIVITA set MODIFICATO_DA = -1;
COMMIT;
END;

BEGIN
UPDATE TMP_ORESTE_SO set MANAGER = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (MANAGER, 'AL32UTF8'),2));
COMMIT;
END;

BEGIN
UPDATE T_MPS_BO_RESPONSABILI_OFFERTA set AM_NOME = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (AM_NOME, 'AL32UTF8'),2));
UPDATE T_MPS_BO_RESPONSABILI_OFFERTA set SAM_NOME = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (SAM_NOME, 'AL32UTF8'),2));
UPDATE T_MPS_BO_RESPONSABILI_OFFERTA set VDG_NOME = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (VDG_NOME, 'AL32UTF8'),2));
UPDATE T_MPS_BO_RESPONSABILI_OFFERTA set DG_NOME = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (DG_NOME, 'AL32UTF8'),2));
UPDATE T_MPS_BO_RESPONSABILI_OFFERTA set CD_NOME = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CD_NOME, 'AL32UTF8'),2));
UPDATE T_MPS_BO_RESPONSABILI_OFFERTA set CONTROLLER = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (CONTROLLER, 'AL32UTF8'),2));
UPDATE T_MPS_BO_RESPONSABILI_OFFERTA set MOTIVAZIONE_RIGETTO = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (MOTIVAZIONE_RIGETTO, 'AL32UTF8'),2));
UPDATE T_MPS_BO_RESPONSABILI_OFFERTA set PROSSIMO_FIRMATARIO_RAZIONALE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (PROSSIMO_FIRMATARIO_RAZIONALE, 'AL32UTF8'),2));
UPDATE T_MPS_BO_RESPONSABILI_OFFERTA set NOTA_RAZIONALE = rawtohex(DBMS_CRYPTO.Hash (UTL_I18N.STRING_TO_RAW (NOTA_RAZIONALE, 'AL32UTF8'),2));
COMMIT;
END;


























