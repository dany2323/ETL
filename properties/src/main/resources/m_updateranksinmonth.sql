UPDATE DMALM_ANOMALIA_PRODOTTO wi1 
SET RANK_STATO_ANOMALIA='0'; 
UPDATE DMALM_ANOMALIA_PRODOTTO wi1 
SET RANK_STATO_ANOMALIA='1' 
WHERE wi1.RANK_STATO_ANOMALIA='0' 
AND wi1.DMALM_ANOMALIA_PRODOTTO_PK = (SELECT MAX (DMALM_ANOMALIA_PRODOTTO_PK) 
                              FROM DMALM_ANOMALIA_PRODOTTO wi2 
                              WHERE wi1.CD_ANOMALIA=wi2.CD_ANOMALIA 
                              AND wi1.ID_REPOSITORY = wi2.ID_REPOSITORY); 
 
UPDATE DMALM_DOCUMENTO 
SET RANK_STATO_DOCUMENTO='0'; 
UPDATE DMALM_DOCUMENTO wi1 
SET RANK_STATO_DOCUMENTO='1' 
WHERE wi1.RANK_STATO_DOCUMENTO='0' 
AND wi1.DMALM_DOCUMENTO_PK = (SELECT MAX (DMALM_DOCUMENTO_PK) 
                              FROM DMALM_DOCUMENTO wi2 
                              WHERE wi1.CD_DOCUMENTO=wi2.CD_DOCUMENTO 
                              AND wi1.ID_REPOSITORY = wi2.ID_REPOSITORY); 
 
UPDATE DMALM_TESTCASE 
SET RANK_STATO_TESTCASE='0'; 
UPDATE DMALM_TESTCASE wi1 
SET RANK_STATO_TESTCASE='1' 
WHERE wi1.RANK_STATO_TESTCASE='0' 
AND wi1.DMALM_TESTCASE_PK = (SELECT MAX (DMALM_TESTCASE_PK) 
                              FROM DMALM_TESTCASE wi2 
                              WHERE wi1.CD_TESTCASE=wi2.CD_TESTCASE 
                              AND wi1.ID_REPOSITORY = wi2.ID_REPOSITORY); 
UPDATE DMALM_PEI 
SET RANK_STATO_PEI='0'; 
UPDATE DMALM_PEI wi1 
SET RANK_STATO_PEI='1' 
WHERE wi1.RANK_STATO_PEI='0' 
AND wi1.DMALM_PEI_PK = (SELECT MAX (DMALM_PEI_PK) 
                              FROM DMALM_PEI wi2 
                              WHERE wi1.CD_PEI=wi2.CD_PEI 
                              AND wi1.ID_REPOSITORY = wi2.ID_REPOSITORY); 
 
UPDATE DMALM_BUILD 
SET RANK_STATO_BUILD ='0'; 
UPDATE DMALM_BUILD wi1 
SET wi1.RANK_STATO_BUILD='1' 
WHERE wi1.RANK_STATO_BUILD='0' 
AND wi1.DMALM_BUILD_PK = (SELECT MAX (DMALM_BUILD_PK) 
                              FROM DMALM_BUILD wi2 
                              WHERE wi1.CD_BUILD=wi2.CD_BUILD 
                              AND wi1.ID_REPOSITORY = wi2.ID_REPOSITORY); 
 
UPDATE DMALM_PROGETTO_ESE wi1 
SET wi1.RANK_STATO_PROGETTO_ESE='0'; 
 
UPDATE DMALM_PROGETTO_ESE wi1 
SET wi1.RANK_STATO_PROGETTO_ESE='1' 
WHERE wi1.RANK_STATO_PROGETTO_ESE='0' 
AND wi1.DMALM_PROGETTO_ESE_PK = (SELECT MAX (DMALM_PROGETTO_ESE_PK) 
                              FROM DMALM_PROGETTO_ESE wi2 
                              WHERE wi1.CD_PROGETTO_ESE=wi2.CD_PROGETTO_ESE 
                              AND wi1.ID_REPOSITORY = wi2.ID_REPOSITORY); 
 
UPDATE DMALM_FASE 
SET RANK_STATO_FASE='0'; 
UPDATE DMALM_FASE wi1 
SET wi1.RANK_STATO_FASE='1' 
WHERE wi1.RANK_STATO_FASE='0' 
AND wi1.DMALM_FASE_PK = (SELECT MAX (DMALM_FASE_PK) 
                              FROM DMALM_FASE wi2 
                              WHERE wi1.CD_FASE=wi2.CD_FASE 
                              AND wi1.ID_REPOSITORY = wi2.ID_REPOSITORY); 

UPDATE DMALM_DIFETTO_PRODOTTO wi1 
SET wi1.RANK_STATO_DIFETTO='0';
UPDATE DMALM_DIFETTO_PRODOTTO wi1 
SET wi1.RANK_STATO_DIFETTO='1' 
WHERE wi1.RANK_STATO_DIFETTO='0' 
AND wi1.DT_STORICIZZAZIONE = (SELECT MAX (DT_STORICIZZAZIONE) 
                              FROM DMALM_DIFETTO_PRODOTTO wi2 
                              WHERE wi1.CD_DIFETTO=wi2.CD_DIFETTO 
                              AND wi1.ID_REPOSITORY = wi2.ID_REPOSITORY); 
 
UPDATE DMALM_RELEASE_DI_PROGETTO 
SET RANK_STATO_RELEASEDIPROG='0';        
UPDATE DMALM_RELEASE_DI_PROGETTO wi1 
SET wi1.RANK_STATO_RELEASEDIPROG='1' 
WHERE wi1.RANK_STATO_RELEASEDIPROG='0' 
AND wi1.DMALM_RELEASEDIPROG_PK = (SELECT MAX (DMALM_RELEASEDIPROG_PK) 
                              FROM DMALM_RELEASE_DI_PROGETTO wi2 
                              WHERE wi1.CD_RELEASEDIPROG=wi2.CD_RELEASEDIPROG 
                              AND wi1.ID_REPOSITORY = wi2.ID_REPOSITORY);                     

UPDATE DMALM_SOTTOPROGRAMMA 
SET RANK_STATO_SOTTOPROGRAMMA='0'; 
UPDATE DMALM_SOTTOPROGRAMMA wi1 
SET wi1.RANK_STATO_SOTTOPROGRAMMA='1' 
WHERE wi1.RANK_STATO_SOTTOPROGRAMMA='0' 
AND wi1.DT_STORICIZZAZIONE = (SELECT MAX (DT_STORICIZZAZIONE) 
                              FROM DMALM_SOTTOPROGRAMMA wi2 
                              WHERE wi1.CD_SOTTOPROGRAMMA=wi2.CD_SOTTOPROGRAMMA 
                              AND wi1.ID_REPOSITORY = wi2.ID_REPOSITORY);                        
 
UPDATE DMALM_PROGRAMMA 
SET RANK_STATO_PROGRAMMA='0'; 
UPDATE DMALM_PROGRAMMA wi1 
SET wi1.RANK_STATO_PROGRAMMA='1' 
WHERE wi1.RANK_STATO_PROGRAMMA='0' 
AND wi1.DMALM_PROGRAMMA_PK = (SELECT MAX (DMALM_PROGRAMMA_PK) 
                              FROM DMALM_PROGRAMMA wi2 
                              WHERE wi1.CD_PROGRAMMA=wi2.CD_PROGRAMMA 
                              AND wi1.ID_REPOSITORY = wi2.ID_REPOSITORY);          

UPDATE DMALM_TASK_IT 
SET RANK_STATO_TASK_IT='0';           
UPDATE DMALM_TASK_IT wi1 
SET wi1.RANK_STATO_TASK_IT='1' 
WHERE wi1.RANK_STATO_TASK_IT='0' 
AND wi1.DMALM_TASK_IT_PK = (SELECT MAX (DMALM_TASK_IT_PK) 
                              FROM DMALM_TASK_IT wi2 
                              WHERE wi1.CD_TASK_IT=wi2.CD_TASK_IT 
                              AND wi1.ID_REPOSITORY = wi2.ID_REPOSITORY);      
 
UPDATE DMALM_ANOMALIA_ASSISTENZA 
SET RANK_STATO_ANOMALIA_ASS='0'; 
UPDATE DMALM_ANOMALIA_ASSISTENZA wi1 
SET wi1.RANK_STATO_ANOMALIA_ASS='1' 
WHERE wi1.RANK_STATO_ANOMALIA_ASS='0' 
AND wi1.DMALM_ANOMALIA_ASS_PK = (SELECT MAX (DMALM_ANOMALIA_ASS_PK) 
                              FROM DMALM_ANOMALIA_ASSISTENZA wi2 
                              WHERE wi1.CD_ANOMALIA_ASS=wi2.CD_ANOMALIA_ASS 
                              AND wi1.ID_REPOSITORY = wi2.ID_REPOSITORY);   
 
UPDATE DMALM_RELEASE_IT 
SET RANK_STATO_RELEASE_IT='0'; 
UPDATE DMALM_RELEASE_IT wi1 
SET wi1.RANK_STATO_RELEASE_IT='1' 
WHERE wi1.RANK_STATO_RELEASE_IT='0' 
AND wi1.DMALM_RELEASE_IT_PK = (SELECT MAX (DMALM_RELEASE_IT_PK) 
                              FROM DMALM_RELEASE_IT wi2 
                              WHERE wi1.CD_RELEASE_IT=wi2.CD_RELEASE_IT 
                              AND wi1.ID_REPOSITORY = wi2.ID_REPOSITORY);   

UPDATE DMALM_MANUTENZIONE 
SET RANK_STATO_MANUTENZIONE='0'; 
UPDATE DMALM_MANUTENZIONE wi1 
SET wi1.RANK_STATO_MANUTENZIONE='1' 
WHERE wi1.RANK_STATO_MANUTENZIONE='0' 
AND wi1.DMALM_MANUTENZIONE_PK = (SELECT MAX (DMALM_MANUTENZIONE_PK) 
                              FROM DMALM_MANUTENZIONE wi2 
                              WHERE wi1.CD_MANUTENZIONE=wi2.CD_MANUTENZIONE 
                              AND wi1.ID_REPOSITORY = wi2.ID_REPOSITORY);   

UPDATE DMALM_RELEASE_SERVIZI 
SET RANK_STATO_REL_SERVIZI='0'; 
UPDATE DMALM_RELEASE_SERVIZI wi1 
SET wi1.RANK_STATO_REL_SERVIZI='1' 
WHERE wi1.RANK_STATO_REL_SERVIZI='0' 
AND wi1.DMALM_REL_SERVIZI_PK = (SELECT MAX (DMALM_REL_SERVIZI_PK) 
                              FROM DMALM_RELEASE_SERVIZI wi2 
                              WHERE wi1.CD_REL_SERVIZI=wi2.CD_REL_SERVIZI 
                              AND wi1.ID_REPOSITORY = wi2.ID_REPOSITORY);   
 
UPDATE DMALM_PROGETTO_SVILUPPO_DEM 
SET RANK_STATO_PROG_SVIL_D='0'; 
UPDATE DMALM_PROGETTO_SVILUPPO_DEM wi1 
SET wi1.RANK_STATO_PROG_SVIL_D='1' 
WHERE wi1.RANK_STATO_PROG_SVIL_D='0' 
AND wi1.DMALM_PROG_SVIL_D_PK = (SELECT MAX (DMALM_PROG_SVIL_D_PK) 
                              FROM DMALM_PROGETTO_SVILUPPO_DEM wi2 
                              WHERE wi1.CD_PROG_SVIL_D=wi2.CD_PROG_SVIL_D 
                              AND wi1.ID_REPOSITORY = wi2.ID_REPOSITORY);   
 
UPDATE DMALM_RICHIESTA_MANUTENZIONE 
SET RANK_STATO_RICH_MANUTENZIONE='0'; 
UPDATE DMALM_RICHIESTA_MANUTENZIONE wi1 
SET wi1.RANK_STATO_RICH_MANUTENZIONE='1' 
WHERE wi1.RANK_STATO_RICH_MANUTENZIONE='0' 
AND wi1.DMALM_RICH_MANUTENZIONE_PK = (SELECT MAX (DMALM_RICH_MANUTENZIONE_PK) 
                              FROM DMALM_RICHIESTA_MANUTENZIONE wi2 
                              WHERE wi1.CD_RICHIESTA_MANUTENZIONE=wi2.CD_RICHIESTA_MANUTENZIONE 
                              AND wi1.ID_REPOSITORY = wi2.ID_REPOSITORY); 
 

UPDATE DMALM_PROGETTO_DEMAND 
SET RANK_STATO_PROGETTO_DEMAND='0'; 
UPDATE DMALM_PROGETTO_DEMAND wi1 
SET wi1.RANK_STATO_PROGETTO_DEMAND='1' 
WHERE wi1.RANK_STATO_PROGETTO_DEMAND='0' 
AND wi1.DMALM_PROGETTO_DEMAND_PK = (SELECT MAX (DMALM_PROGETTO_DEMAND_PK) 
                              FROM DMALM_PROGETTO_DEMAND wi2 
                              WHERE wi1.CD_PROGETTO_DEMAND=wi2.CD_PROGETTO_DEMAND 
                              AND wi1.ID_REPOSITORY = wi2.ID_REPOSITORY);  
 
UPDATE DMALM_RICHIESTA_GESTIONE 
SET RANK_STATO_RICHIESTA_GEST='0'; 
UPDATE DMALM_RICHIESTA_GESTIONE wi1 
SET wi1.RANK_STATO_RICHIESTA_GEST='1' 
WHERE wi1.RANK_STATO_RICHIESTA_GEST='0' 
AND wi1.DMALM_RICHIESTA_GEST_PK = (SELECT MAX (DMALM_RICHIESTA_GEST_PK) 
                              FROM DMALM_RICHIESTA_GESTIONE wi2 
                              WHERE wi1.CD_RICHIESTA_GEST=wi2.CD_RICHIESTA_GEST 
                              AND wi1.ID_REPOSITORY = wi2.ID_REPOSITORY); 

UPDATE DMALM_PROGETTO_SVILUPPO_SVIL 
SET RANK_STATO_PROG_SVIL_S='0'; 
UPDATE DMALM_PROGETTO_SVILUPPO_SVIL wi1 
SET wi1.RANK_STATO_PROG_SVIL_S='1' 
WHERE wi1.RANK_STATO_PROG_SVIL_S='0' 
AND wi1.DT_STORICIZZAZIONE = (SELECT MAX (DT_STORICIZZAZIONE) 
                              FROM DMALM_PROGETTO_SVILUPPO_SVIL wi2 
                              WHERE wi1.CD_PROG_SVIL_S=wi2.CD_PROG_SVIL_S 
                              AND wi1.ID_REPOSITORY = wi2.ID_REPOSITORY); 
 
UPDATE DMALM_TASK 
SET RANK_STATO_TASK='0'; 
UPDATE DMALM_TASK wi1 
SET wi1.RANK_STATO_TASK='1' 
WHERE wi1.RANK_STATO_TASK='0' 
AND wi1.DMALM_TASK_PK = (SELECT MAX (DMALM_TASK_PK) 
                              FROM DMALM_TASK wi2 
                              WHERE wi1.CD_TASK=wi2.CD_TASK 
                              AND wi1.ID_REPOSITORY = wi2.ID_REPOSITORY); 

UPDATE DMALM_CLASSIFICATORE 
SET RANK_STATO_CLASSIFICATORE='0'; 
UPDATE DMALM_CLASSIFICATORE wi1 
SET wi1.RANK_STATO_CLASSIFICATORE='1' 
WHERE wi1.RANK_STATO_CLASSIFICATORE='0' 
AND wi1.DMALM_CLASSIFICATORE_PK = (SELECT MAX (DMALM_CLASSIFICATORE_PK) 
                              FROM DMALM_CLASSIFICATORE wi2 
                              WHERE wi1.CD_CLASSIFICATORE=wi2.CD_CLASSIFICATORE 
                              AND wi1.ID_REPOSITORY = wi2.ID_REPOSITORY); 
                              
UPDATE DMALM_RICHIESTA_SUPPORTO 
SET RANK_STATO_RICH_SUPPORTO='0'; 
UPDATE DMALM_RICHIESTA_SUPPORTO wi1 
SET wi1.RANK_STATO_RICH_SUPPORTO='1' 
WHERE wi1.RANK_STATO_RICH_SUPPORTO='0' 
AND wi1.DT_STORICIZZAZIONE = (SELECT MAX (DT_STORICIZZAZIONE) 
                              FROM DMALM_RICHIESTA_SUPPORTO wi2 
                              WHERE wi1.ID_RICHIESTA_SUPPORTO=wi2.ID_RICHIESTA_SUPPORTO 
                              AND wi1.ID_REPOSITORY = wi2.ID_REPOSITORY); 
                              
update DMALM_ANOMALIA_PRODOTTO set RANK_STATO_ANOMALIA_MESE = 0; 
update DMALM_ANOMALIA_ASSISTENZA set RANK_STATO_ANOMALIA_ASS_MESE = 0; 
update DMALM_BUILD set RANK_STATO_BUILD_MESE = 0; 
update DMALM_CLASSIFICATORE set RANK_STATO_CLASSIF_MESE = 0;
update DMALM_DIFETTO_PRODOTTO set RANK_STATO_DIFETTO_MESE = 0; 
update DMALM_DOCUMENTO set RANK_STATO_DOCUMENTO_MESE = 0; 
update DMALM_FASE set RANK_STATO_FASE_MESE = 0; 
update DMALM_MANUTENZIONE set RANK_STATO_MANUTENZIONE_MESE = 0; 
update DMALM_PEI set RANK_STATO_PEI_MESE = 0; 
update DMALM_PROGETTO_DEMAND set RANK_STATO_PROGETTO_DEM_MESE = 0; 
update DMALM_PROGETTO_ESE set RANK_STATO_PROGETTO_ESE_MESE = 0; 
update DMALM_PROGETTO_SVILUPPO_DEM set RANK_STATO_PROG_SVIL_D_MESE = 0; 
update DMALM_PROGETTO_SVILUPPO_SVIL set RANK_STATO_PROG_SVIL_S_MESE = 0; 
update DMALM_PROGRAMMA set RANK_STATO_PROGRAMMA_MESE = 0; 
update DMALM_RELEASE_DI_PROGETTO set RANK_STATO_RELEASEDIPROG_MESE = 0; 
update DMALM_RELEASE_IT set RANK_STATO_RELEASE_IT_MESE = 0; 
update DMALM_RELEASE_SERVIZI set RANK_STATO_REL_SERVIZI_MESE = 0; 
update DMALM_RICHIESTA_GESTIONE set RANK_STATO_RICHIESTA_GEST_MESE = 0; 
update DMALM_RICHIESTA_MANUTENZIONE set RANK_STATO_RICH_MANUT_MESE = 0; 
update DMALM_SOTTOPROGRAMMA set RANK_STATO_SOTTOPROGRAMMA_MESE = 0; 
update DMALM_TASK set RANK_STATO_TASK_MESE = 0; 
update DMALM_TASK_IT set RANK_STATO_TASK_IT_MESE = 0; 
update DMALM_TESTCASE set RANK_STATO_TESTCASE_MESE = 0;
update DMALM_ANOMALIA_PRODOTTO set RANK_STATO_ANOMALIA_MESE = 1 where DMALM_ANOMALIA_PRODOTTO_PK in (
select DMALM_ANOMALIA_PRODOTTO_PK from 
(
select a.dmalm_anomalia_prodotto_pk, row_number() over (partition by a.cd_anomalia, extract(year from DT_STORICIZZAZIONE), extract(month from DT_STORICIZZAZIONE) order by DMALM_ANOMALIA_PRODOTTO_PK desc) as ranker from DMALM_ANOMALIA_PRODOTTO a
) Z 
where ranker = 1); 
update DMALM_ANOMALIA_ASSISTENZA set RANK_STATO_ANOMALIA_ASS_MESE = 1 where DMALM_ANOMALIA_ASS_PK in (
select DMALM_ANOMALIA_ASS_PK from 
(
select a.DMALM_ANOMALIA_ASS_PK, row_number() over 
	(partition by a.CD_ANOMALIA_ASS, extract(year from DT_STORICIZZAZIONE), extract(month from DT_STORICIZZAZIONE) 
	order by DMALM_ANOMALIA_ASS_PK desc) as ranker from DMALM_ANOMALIA_ASSISTENZA a
) Z 
where ranker = 1);
update DMALM_BUILD set RANK_STATO_BUILD_MESE = 1 where DMALM_BUILD_PK in (
select DMALM_BUILD_PK from 
(
select a.DMALM_BUILD_PK, row_number() over 
	(partition by a.CD_BUILD, extract(year from DT_STORICIZZAZIONE), extract(month from DT_STORICIZZAZIONE) 
	order by DMALM_BUILD_PK desc) as ranker from DMALM_BUILD a
) Z 
where ranker = 1); 
update DMALM_CLASSIFICATORE set RANK_STATO_CLASSIF_MESE = 1 where DMALM_CLASSIFICATORE_PK in (
select DMALM_CLASSIFICATORE_PK from 
(
select a.DMALM_CLASSIFICATORE_PK, row_number() over 
	(partition by a.CD_CLASSIFICATORE, extract(year from DT_STORICIZZAZIONE), extract(month from DT_STORICIZZAZIONE) 
	order by DMALM_CLASSIFICATORE_PK desc) as ranker from DMALM_CLASSIFICATORE a
) Z 
where ranker = 1); 
update DMALM_DIFETTO_PRODOTTO set RANK_STATO_DIFETTO_MESE = 1 where DMALM_DIFETTO_PRODOTTO_PK in (
select DMALM_DIFETTO_PRODOTTO_PK from
(
select a.dmalm_DIFETTO_prodotto_pk, row_number() over (partition by a.cd_DIFETTO, extract(year from DT_STORICIZZAZIONE), extract(month from DT_STORICIZZAZIONE) order by DMALM_DIFETTO_PRODOTTO_PK desc) as ranker from DMALM_DIFETTO_PRODOTTO a
) Z 
where ranker = 1);
update DMALM_DOCUMENTO set RANK_STATO_DOCUMENTO_MESE = 1 where DMALM_DOCUMENTO_PK in (
select DMALM_DOCUMENTO_PK from 
(
select a.DMALM_DOCUMENTO_PK, row_number() over 
	(partition by a.CD_DOCUMENTO, extract(year from DT_STORICIZZAZIONE), extract(month from DT_STORICIZZAZIONE) 
	order by DMALM_DOCUMENTO_PK desc) as ranker from DMALM_DOCUMENTO a
) Z 
where ranker = 1); 
update DMALM_FASE set RANK_STATO_FASE_MESE = 1 where DMALM_FASE_PK in (
select DMALM_FASE_PK from 
(
select a.DMALM_FASE_PK, row_number() over 
	(partition by a.CD_FASE, extract(year from DT_STORICIZZAZIONE), extract(month from DT_STORICIZZAZIONE) 
	order by DMALM_FASE_PK desc) as ranker from DMALM_FASE a
) Z 
where ranker = 1); 
update DMALM_MANUTENZIONE set RANK_STATO_MANUTENZIONE_MESE = 1 where DMALM_MANUTENZIONE_PK in (
select DMALM_MANUTENZIONE_PK from 
(
select a.DMALM_MANUTENZIONE_PK, row_number() over 
	(partition by a.CD_MANUTENZIONE, extract(year from DT_STORICIZZAZIONE), extract(month from DT_STORICIZZAZIONE) 
	order by DMALM_MANUTENZIONE_PK desc) as ranker from DMALM_MANUTENZIONE a
) Z 
where ranker = 1); 
update DMALM_PEI set RANK_STATO_PEI_MESE = 1 where DMALM_PEI_PK in (
select DMALM_PEI_PK from 
(
select a.DMALM_PEI_PK, row_number() over 
	(partition by a.CD_PEI, extract(year from DT_STORICIZZAZIONE), extract(month from DT_STORICIZZAZIONE) 
	order by DMALM_PEI_PK desc) as ranker from DMALM_PEI a
) Z 
where ranker = 1); 
update DMALM_PROGETTO_DEMAND set RANK_STATO_PROGETTO_DEM_MESE = 1 where DMALM_PROGETTO_DEMAND_PK in (
select DMALM_PROGETTO_DEMAND_PK from 
(
select a.DMALM_PROGETTO_DEMAND_PK, row_number() over 
	(partition by a.CD_PROGETTO_DEMAND, extract(year from DT_STORICIZZAZIONE), extract(month from DT_STORICIZZAZIONE) 
	order by DMALM_PROGETTO_DEMAND_PK desc) as ranker from DMALM_PROGETTO_DEMAND a
) Z 
where ranker = 1); 
update DMALM_PROGETTO_ESE set RANK_STATO_PROGETTO_ESE_MESE = 1 where DMALM_PROGETTO_ESE_PK in (
select DMALM_PROGETTO_ESE_PK from 
(
select a.DMALM_PROGETTO_ESE_PK, row_number() over 
	(partition by a.CD_PROGETTO_ESE, extract(year from DT_STORICIZZAZIONE), extract(month from DT_STORICIZZAZIONE) 
	order by DMALM_PROGETTO_ESE_PK desc) as ranker from DMALM_PROGETTO_ESE a
) Z 
where ranker = 1); 
update DMALM_PROGETTO_SVILUPPO_DEM set RANK_STATO_PROG_SVIL_D_MESE = 1 where DMALM_PROG_SVIL_D_PK in (
select DMALM_PROG_SVIL_D_PK from 
(
select a.DMALM_PROG_SVIL_D_PK, row_number() over 
	(partition by a.CD_PROG_SVIL_D, extract(year from DT_STORICIZZAZIONE), extract(month from DT_STORICIZZAZIONE) 
	order by DMALM_PROG_SVIL_D_PK desc) as ranker from DMALM_PROGETTO_SVILUPPO_DEM a
) Z 
where ranker = 1); 
update DMALM_PROGETTO_SVILUPPO_SVIL set RANK_STATO_PROG_SVIL_S_MESE = 1 where DMALM_PROG_SVIL_S_PK in (
select DMALM_PROG_SVIL_S_PK from 
(
select a.DMALM_PROG_SVIL_S_PK, row_number() over 
	(partition by a.CD_PROG_SVIL_S, extract(year from DT_STORICIZZAZIONE), extract(month from DT_STORICIZZAZIONE) 
	order by DMALM_PROG_SVIL_S_PK desc) as ranker from DMALM_PROGETTO_SVILUPPO_SVIL a
) Z 
where ranker = 1); 
update DMALM_PROGRAMMA set RANK_STATO_PROGRAMMA_MESE = 1 where DMALM_PROGRAMMA_PK in (
select DMALM_PROGRAMMA_PK from 
(
select a.DMALM_PROGRAMMA_PK, row_number() over 
	(partition by a.CD_PROGRAMMA, extract(year from DT_STORICIZZAZIONE), extract(month from DT_STORICIZZAZIONE) 
	order by DMALM_PROGRAMMA_PK desc) as ranker from DMALM_PROGRAMMA a
) Z 
where ranker = 1); 
update DMALM_RELEASE_DI_PROGETTO set RANK_STATO_RELEASEDIPROG_MESE = 1 where DMALM_RELEASEDIPROG_PK in (
select DMALM_RELEASEDIPROG_PK from 
(
select a.DMALM_RELEASEDIPROG_PK, row_number() over 
	(partition by a.CD_RELEASEDIPROG, extract(year from DT_STORICIZZAZIONE), extract(month from DT_STORICIZZAZIONE) 
	order by DMALM_RELEASEDIPROG_PK desc) as ranker from DMALM_RELEASE_DI_PROGETTO a
) Z 
where ranker = 1); 
update DMALM_RELEASE_IT set RANK_STATO_RELEASE_IT_MESE = 1 where DMALM_RELEASE_IT_PK in (
select DMALM_RELEASE_IT_PK from 
(
select a.DMALM_RELEASE_IT_PK, row_number() over 
	(partition by a.CD_RELEASE_IT, extract(year from DT_STORICIZZAZIONE), extract(month from DT_STORICIZZAZIONE) 
	order by DMALM_RELEASE_IT_PK desc) as ranker from DMALM_RELEASE_IT a
) Z 
where ranker = 1); 
update DMALM_RELEASE_SERVIZI set RANK_STATO_REL_SERVIZI_MESE = 1 where DMALM_REL_SERVIZI_PK in (
select DMALM_REL_SERVIZI_PK from 
(
select a.DMALM_REL_SERVIZI_PK, row_number() over 
	(partition by a.CD_REL_SERVIZI, extract(year from DT_STORICIZZAZIONE), extract(month from DT_STORICIZZAZIONE) 
	order by DMALM_REL_SERVIZI_PK desc) as ranker from DMALM_RELEASE_SERVIZI a
) Z 
where ranker = 1); 
update DMALM_RICHIESTA_GESTIONE set RANK_STATO_RICHIESTA_GEST_MESE = 1 where DMALM_RICHIESTA_GEST_PK in (
select DMALM_RICHIESTA_GEST_PK from 
(
select a.DMALM_RICHIESTA_GEST_PK, row_number() over 
	(partition by a.CD_RICHIESTA_GEST, extract(year from DT_STORICIZZAZIONE), extract(month from DT_STORICIZZAZIONE) 
	order by DMALM_RICHIESTA_GEST_PK desc) as ranker from DMALM_RICHIESTA_GESTIONE a
) Z 
where ranker = 1); 
update DMALM_RICHIESTA_MANUTENZIONE set RANK_STATO_RICH_MANUT_MESE = 1 where DMALM_RICH_MANUTENZIONE_PK in (
select DMALM_RICH_MANUTENZIONE_PK from 
(
select a.DMALM_RICH_MANUTENZIONE_PK, row_number() over 
	(partition by a.CD_RICHIESTA_MANUTENZIONE, extract(year from DT_STORICIZZAZIONE), extract(month from DT_STORICIZZAZIONE) 
	order by DMALM_RICH_MANUTENZIONE_PK desc) as ranker from DMALM_RICHIESTA_MANUTENZIONE a
) Z 
where ranker = 1); 
update DMALM_SOTTOPROGRAMMA set RANK_STATO_SOTTOPROGRAMMA_MESE = 1 where DMALM_SOTTOPROGRAMMA_PK in (
select DMALM_SOTTOPROGRAMMA_PK from 
(
select a.DMALM_SOTTOPROGRAMMA_PK, row_number() over 
	(partition by a.CD_SOTTOPROGRAMMA, extract(year from DT_STORICIZZAZIONE), extract(month from DT_STORICIZZAZIONE) 
	order by DMALM_SOTTOPROGRAMMA_PK desc) as ranker from DMALM_SOTTOPROGRAMMA a
) Z 
where ranker = 1); 
update DMALM_TASK set RANK_STATO_TASK_MESE = 1 where DMALM_TASK_PK in (
select DMALM_TASK_PK from 
(
select a.DMALM_TASK_PK, row_number() over 
	(partition by a.CD_TASK, extract(year from DT_STORICIZZAZIONE), extract(month from DT_STORICIZZAZIONE) 
	order by DMALM_TASK_PK desc) as ranker from DMALM_TASK a
) Z 
where ranker = 1); 
update DMALM_TASK_IT set RANK_STATO_TASK_IT_MESE = 1 where DMALM_TASK_IT_PK in (
select DMALM_TASK_IT_PK from 
(
select a.DMALM_TASK_IT_PK, row_number() over 
	(partition by a.CD_TASK_IT, extract(year from DT_STORICIZZAZIONE), extract(month from DT_STORICIZZAZIONE) 
	order by DMALM_TASK_IT_PK desc) as ranker from DMALM_TASK_IT a
) Z 
where ranker = 1); 
update DMALM_TESTCASE set RANK_STATO_TESTCASE_MESE = 1 where DMALM_TESTCASE_PK in (
select DMALM_TESTCASE_PK from 
(
select a.DMALM_TESTCASE_PK, row_number() over 
	(partition by a.CD_TESTCASE, extract(year from DT_STORICIZZAZIONE), extract(month from DT_STORICIZZAZIONE) 
	order by DMALM_TESTCASE_PK desc) as ranker from DMALM_TESTCASE a
) Z 
where ranker = 1);